%graphical method code 

clc
clear all;
format rat;
%% Phase 1: Input Parameters
A=[1 2; 1 1; 1 -2];
b=[10;6;1];
c=[2,1];
x1=0:1:max(b)

%% Phase 2: Plotting the graph 
x21=(b(1)-A(1,1).*x1)./A(1,2)
x22=(b(2)-A(2,1).*x1)./A(2,2)
x23=(b(3)-A(3,1).*x1)./A(3,2)
x21=max(0,x21)
x22=max(0,x22)
x23=max(0,x23)
plot(x1,x21,x1,x22,x1,x23)
title('x1 vs x2');
xlabel('value of x1')
ylabel('value of x2')
legend('x1+2x2=10','x1+x2=6', 'x1-2x2=1')
grid on;

%% Phase 3: Find the corner pt with axes
cx1=find(x1==0)
c1=find(x21==0)
line1 =[x1([c1 cx1]);x21([c1 cx1])]'
c2=find(x22==0)
line2 =[x1([c2 cx1]);x22([c2 cx1])]'
c3=find(x23==0)
line3=[x1([c3 cx1]);x23([c3 cx1])]'
corpt = unique([line1;line2; line3], 'rows')
corpt

%% Phase 4: Point of Intersection
pt=[0;0];
for i=1:size(A,1)
    for j=i+1:size(A,1)
        A1=A([i j], :)
        B1=b([i j])
        x= inv(A1)*B1
        pt=[pt x]
    end 
end
ptt=pt'

%% Phase 5: All Corner Points
allpt =[ptt;corpt]
points=unique(allpt,'rows')

%% Phase 6: Feasible Region
for i=1:size(points,1)
    const1(i)= A(1,1)*points(i,1)+ A(1,2)*points(i,2)-b(1);
    const2(i)= A(2,1)*points(i,1)+ A(2,2)*points(i,2)-b(2);
    const3(i)= A(3,1)*points(i,1)+ A(3,2)*points(i,2)-b(3);
end
s1= find(const1>0)
s2= find(const2>0)
s3= find(const3>0)
S= unique([s1 s2 s3])
points(S,:)= []

%% Phase 7: Objective Value
values = points*c'
table=[points values]
[obj,index]=max(values)
x1=points(index,1);
x2=points(index,2);

%% Phase 8: Optimal Solution
fprintf('Optimized value is %f at (%f,%f)',obj,x1,x2);
