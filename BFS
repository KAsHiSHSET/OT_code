%bfs 
%% Find the Basic Solution of LPP
clc
clear all

%% Phase 1: Input
A=[2 3 -1 4;1 2 6 -7];
C=[2 3 4 7];              %Objective function
b=[8; -3];                %R.H.S
n=size(A,2);
m=size(A,1);
nCm=nchoosek(n,m)     %Total no. of Basic Solutions 
p=nchoosek(1:n,m)     %Pairs of Basic Solution

%% Phase 2:Finding basic solutions
sol=[];  %Default solution is zero 
if n>m
    for  i=1:nCm
        y=zeros(n,1);
        A1=A(:,p(i,:));
        X=inv(A1)*b;
        %Feasibility condition
        if all(X>=0 & X~=inf & X~=-inf)
            y(p(i,:))=X;
            sol=[sol y]
        end
    end

end

%% Phase 3: Objective Function
Z=C*sol
% Find the optimal value
[obj,index]=max(Z)
BFS = sol(:,index)
% Print the solution
optval = [BFS' obj]
array2table(optval, 'VariableNames',{'x1','x2','x3','x4','Z'})
